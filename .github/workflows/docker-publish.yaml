name: Publish Docker Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: 
          - { name: "fastmcp-openapi-server", path: "src/fastmcp-openapi", version_cmd: "grep '^version =' pyproject.toml | sed -E 's/version = \"(.*)\"/\\1/'" }
          - { name: "puppeteer-mcp-server", path: "src/puppeteer", version_cmd: "jq -r .version package.json" }
          - { name: "slack-mcp-server", path: "src/slack",  version_cmd: "jq -r .version package.json" }
          - { name: "thingsboard-mcp-server", path: "src/thingsboard", version_cmd: "grep '^version =' pyproject.toml | sed -E 's/version = \"(.*)\"/\\1/'" }
          - { name: "yr-mcp-server", path: "src/yr", version_cmd: "grep '^version =' pyproject.toml | sed -E 's/version = \"(.*)\"/\\1/'" }

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from project
        id: get_version
        run: |
          cd ${{ matrix.project.path }}
          echo "VERSION=$(${{ matrix.project.version_cmd }})" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          cd ${{ matrix.project.path }}
          docker build -t ghcr.io/anycontext-ai/${{ matrix.project.name }}:latest .
          docker build -t ghcr.io/anycontext-ai/${{ matrix.project.name }}:${VERSION} -t ghcr.io/anycontext-ai/${{ matrix.project.name }}:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/anycontext-ai/${{ matrix.project.name }}:${VERSION}
          docker push ghcr.io/anycontext-ai/${{ matrix.project.name }}:latest
